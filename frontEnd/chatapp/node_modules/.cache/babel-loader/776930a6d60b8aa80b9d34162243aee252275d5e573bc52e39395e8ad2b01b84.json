{"ast":null,"code":"let setTimeago = {\n  curTime: new Date().getTime(),\n  curTimeItem: function () {\n    return this.getDateItem(this.curTime);\n  },\n  init: function (timeago) {\n    let min = 60 * 1000,\n      half = 30 * min,\n      hour = 2 * half;\n    let timeagoItem = this.getDateItem(timeago);\n    let str = '';\n    if (this.isThisDay(timeago)) {\n      let interval = this.curTime - timeago * 1000;\n      if (interval < min) {\n        str = '刚刚';\n      } else if (interval < hour) {\n        str = Math.floor(interval / min) + '分钟前';\n        if (interval >= half && interval <= half + min) {\n          str = '半小时前';\n        }\n      } else if (interval >= hour) {\n        str = Math.floor(interval / hour) + '小时前';\n      }\n    } else if (this.isYesterday(timeago)) {\n      str = '昨天' + timeagoItem.hour + ':' + timeagoItem.min;\n    } else if (this.isBeforeYesterday(timeago)) {\n      str = '前天' + timeagoItem.hour + ':' + timeagoItem.min;\n    } else if (this.isThisYear(timeago)) {\n      str = timeagoItem.month + '月' + timeagoItem.day + '日';\n    } else {\n      str = timeagoItem.year + '年' + timeagoItem.month + '月' + timeagoItem.day + '日';\n    }\n    return str;\n  },\n  getDateItem: function (timestamp) {\n    let value = ('' + timestamp).length > 10 ? timestamp : timestamp * 1000;\n    let date = new Date(value);\n    let h = date.getHours(),\n      m = date.getMinutes();\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n      hour: h > 9 ? h : '0' + h,\n      min: m > 9 ? m : '0' + m\n    };\n  },\n  isThisDay: function (timeago) {\n    let day = this.getDateItem(timeago);\n    let curTimeItem = this.curTimeItem();\n    return day.year === curTimeItem.year && day.month === curTimeItem.month && day.day === curTimeItem.day;\n  },\n  isThisMonth: function (timeago) {\n    let day = this.getDateItem(timeago);\n    let curTimeItem = this.curTimeItem();\n    return day.year === curTimeItem.year && day.month === curTimeItem.month;\n  },\n  isThisYear: function (timeago) {\n    let day = this.getDateItem(timeago);\n    let curTimeItem = this.curTimeItem();\n    return day.year === curTimeItem.year;\n  },\n  isYesterday: function (timeago) {\n    let day = this.getDateItem(timeago);\n    let curTimeItem = this.curTimeItem();\n    return this.isThisMonth(timeago) && day.day === curTimeItem.day - 1;\n  },\n  isBeforeYesterday: function (timeago) {\n    let day = this.getDateItem(timeago);\n    let curTimeItem = this.curTimeItem();\n    return this.isThisMonth(timeago) && day.day === curTimeItem.day - 2;\n  }\n};\nexport default setTimeago;","map":{"version":3,"names":["setTimeago","curTime","Date","getTime","curTimeItem","getDateItem","init","timeago","min","half","hour","timeagoItem","str","isThisDay","interval","Math","floor","isYesterday","isBeforeYesterday","isThisYear","month","day","year","timestamp","value","length","date","h","getHours","m","getMinutes","getFullYear","getMonth","getDate","isThisMonth"],"sources":["/home/saif/Desktop/WebsiteBackend/frontEnd/chatapp/node_modules/timeagojs/timeago.js"],"sourcesContent":["let setTimeago = {\r\n    curTime: new Date().getTime(),\r\n    curTimeItem: function () {\r\n        return this.getDateItem(this.curTime)\r\n    },\r\n    \r\n    init: function (timeago) {\r\n        let min = 60 * 1000,\r\n            half = 30 * min,\r\n            hour = 2 * half;\r\n        let timeagoItem = this.getDateItem(timeago);\r\n        let str = '';\r\n\r\n        if (this.isThisDay(timeago)) {\r\n            let interval = this.curTime - timeago * 1000;\r\n            if (interval <  min){\r\n                str = '刚刚';\r\n            } else if (interval < hour){\r\n                str = Math.floor(interval / min) + '分钟前';\r\n              if (interval >= half && interval <= half + min){\r\n                  str = '半小时前';\r\n              }\r\n            } else if (interval >= hour){\r\n                str = Math.floor(interval / hour) + '小时前';\r\n            }\r\n        } else if ( this.isYesterday(timeago)) {\r\n            str = '昨天'   + timeagoItem.hour + ':' + timeagoItem.min;\r\n        } else if ( this.isBeforeYesterday(timeago)) {\r\n            str = '前天'   + timeagoItem.hour + ':' + timeagoItem.min;\r\n        } else if (this.isThisYear(timeago)){\r\n            str = timeagoItem.month + '月' + timeagoItem.day + '日';\r\n        } else {\r\n            str = timeagoItem.year + '年' + timeagoItem.month + '月' + timeagoItem.day + '日';\r\n        }\r\n\r\n        return str;\r\n    },\r\n    getDateItem: function (timestamp) {\r\n        let value = (''+timestamp).length > 10 ? timestamp : timestamp * 1000;\r\n        let date = new Date(value);\r\n        let h = date.getHours(),\r\n            m = date.getMinutes();\r\n\r\n        return {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth() + 1,\r\n            day: date.getDate(),\r\n            hour: h > 9 ? h : '0' + h,\r\n            min: m > 9 ? m : '0' + m\r\n        }\r\n    },\r\n    isThisDay: function (timeago) {\r\n    \tlet day = this.getDateItem(timeago);\r\n    \tlet curTimeItem = this.curTimeItem();\r\n        return day.year === curTimeItem.year &&\r\n               day.month === curTimeItem.month &&\r\n               day.day === curTimeItem.day;\r\n    },\r\n    isThisMonth: function (timeago) {\r\n    \tlet day = this.getDateItem(timeago);\r\n    \tlet curTimeItem = this.curTimeItem();\r\n        return day.year === curTimeItem.year && day.month === curTimeItem.month;\r\n    },\r\n    isThisYear: function (timeago) {\r\n    \tlet day = this.getDateItem(timeago);\r\n    \tlet curTimeItem = this.curTimeItem();\r\n        return day.year === curTimeItem.year;\r\n    },\r\n    isYesterday: function (timeago) {\r\n    \tlet day = this.getDateItem(timeago);\r\n    \tlet curTimeItem = this.curTimeItem();\r\n        return this.isThisMonth(timeago) && day.day === curTimeItem.day - 1;\r\n    },\r\n    isBeforeYesterday: function (timeago) {\r\n    \tlet day = this.getDateItem(timeago);\r\n    \tlet curTimeItem = this.curTimeItem();\r\n        return this.isThisMonth(timeago) && day.day === curTimeItem.day - 2;\r\n    }\r\n}\r\n\r\nexport default setTimeago"],"mappings":"AAAA,IAAIA,UAAU,GAAG;EACbC,OAAO,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EAC7BC,WAAW,EAAE,YAAY;IACrB,OAAO,IAAI,CAACC,WAAW,CAAC,IAAI,CAACJ,OAAO,CAAC;EACzC,CAAC;EAEDK,IAAI,EAAE,UAAUC,OAAO,EAAE;IACrB,IAAIC,GAAG,GAAG,EAAE,GAAG,IAAI;MACfC,IAAI,GAAG,EAAE,GAAGD,GAAG;MACfE,IAAI,GAAG,CAAC,GAAGD,IAAI;IACnB,IAAIE,WAAW,GAAG,IAAI,CAACN,WAAW,CAACE,OAAO,CAAC;IAC3C,IAAIK,GAAG,GAAG,EAAE;IAEZ,IAAI,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,EAAE;MACzB,IAAIO,QAAQ,GAAG,IAAI,CAACb,OAAO,GAAGM,OAAO,GAAG,IAAI;MAC5C,IAAIO,QAAQ,GAAIN,GAAG,EAAC;QAChBI,GAAG,GAAG,IAAI;MACd,CAAC,MAAM,IAAIE,QAAQ,GAAGJ,IAAI,EAAC;QACvBE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAGN,GAAG,CAAC,GAAG,KAAK;QAC1C,IAAIM,QAAQ,IAAIL,IAAI,IAAIK,QAAQ,IAAIL,IAAI,GAAGD,GAAG,EAAC;UAC3CI,GAAG,GAAG,MAAM;QAChB;MACF,CAAC,MAAM,IAAIE,QAAQ,IAAIJ,IAAI,EAAC;QACxBE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAGJ,IAAI,CAAC,GAAG,KAAK;MAC7C;IACJ,CAAC,MAAM,IAAK,IAAI,CAACO,WAAW,CAACV,OAAO,CAAC,EAAE;MACnCK,GAAG,GAAG,IAAI,GAAKD,WAAW,CAACD,IAAI,GAAG,GAAG,GAAGC,WAAW,CAACH,GAAG;IAC3D,CAAC,MAAM,IAAK,IAAI,CAACU,iBAAiB,CAACX,OAAO,CAAC,EAAE;MACzCK,GAAG,GAAG,IAAI,GAAKD,WAAW,CAACD,IAAI,GAAG,GAAG,GAAGC,WAAW,CAACH,GAAG;IAC3D,CAAC,MAAM,IAAI,IAAI,CAACW,UAAU,CAACZ,OAAO,CAAC,EAAC;MAChCK,GAAG,GAAGD,WAAW,CAACS,KAAK,GAAG,GAAG,GAAGT,WAAW,CAACU,GAAG,GAAG,GAAG;IACzD,CAAC,MAAM;MACHT,GAAG,GAAGD,WAAW,CAACW,IAAI,GAAG,GAAG,GAAGX,WAAW,CAACS,KAAK,GAAG,GAAG,GAAGT,WAAW,CAACU,GAAG,GAAG,GAAG;IAClF;IAEA,OAAOT,GAAG;EACd,CAAC;EACDP,WAAW,EAAE,UAAUkB,SAAS,EAAE;IAC9B,IAAIC,KAAK,GAAG,CAAC,EAAE,GAACD,SAAS,EAAEE,MAAM,GAAG,EAAE,GAAGF,SAAS,GAAGA,SAAS,GAAG,IAAI;IACrE,IAAIG,IAAI,GAAG,IAAIxB,IAAI,CAACsB,KAAK,CAAC;IAC1B,IAAIG,CAAC,GAAGD,IAAI,CAACE,QAAQ,EAAE;MACnBC,CAAC,GAAGH,IAAI,CAACI,UAAU,EAAE;IAEzB,OAAO;MACHR,IAAI,EAAEI,IAAI,CAACK,WAAW,EAAE;MACxBX,KAAK,EAAEM,IAAI,CAACM,QAAQ,EAAE,GAAG,CAAC;MAC1BX,GAAG,EAAEK,IAAI,CAACO,OAAO,EAAE;MACnBvB,IAAI,EAAEiB,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAGA,CAAC;MACzBnB,GAAG,EAAEqB,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAGA;IAC3B,CAAC;EACL,CAAC;EACDhB,SAAS,EAAE,UAAUN,OAAO,EAAE;IAC7B,IAAIc,GAAG,GAAG,IAAI,CAAChB,WAAW,CAACE,OAAO,CAAC;IACnC,IAAIH,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;IACjC,OAAOiB,GAAG,CAACC,IAAI,KAAKlB,WAAW,CAACkB,IAAI,IAC7BD,GAAG,CAACD,KAAK,KAAKhB,WAAW,CAACgB,KAAK,IAC/BC,GAAG,CAACA,GAAG,KAAKjB,WAAW,CAACiB,GAAG;EACtC,CAAC;EACDa,WAAW,EAAE,UAAU3B,OAAO,EAAE;IAC/B,IAAIc,GAAG,GAAG,IAAI,CAAChB,WAAW,CAACE,OAAO,CAAC;IACnC,IAAIH,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;IACjC,OAAOiB,GAAG,CAACC,IAAI,KAAKlB,WAAW,CAACkB,IAAI,IAAID,GAAG,CAACD,KAAK,KAAKhB,WAAW,CAACgB,KAAK;EAC3E,CAAC;EACDD,UAAU,EAAE,UAAUZ,OAAO,EAAE;IAC9B,IAAIc,GAAG,GAAG,IAAI,CAAChB,WAAW,CAACE,OAAO,CAAC;IACnC,IAAIH,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;IACjC,OAAOiB,GAAG,CAACC,IAAI,KAAKlB,WAAW,CAACkB,IAAI;EACxC,CAAC;EACDL,WAAW,EAAE,UAAUV,OAAO,EAAE;IAC/B,IAAIc,GAAG,GAAG,IAAI,CAAChB,WAAW,CAACE,OAAO,CAAC;IACnC,IAAIH,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;IACjC,OAAO,IAAI,CAAC8B,WAAW,CAAC3B,OAAO,CAAC,IAAIc,GAAG,CAACA,GAAG,KAAKjB,WAAW,CAACiB,GAAG,GAAG,CAAC;EACvE,CAAC;EACDH,iBAAiB,EAAE,UAAUX,OAAO,EAAE;IACrC,IAAIc,GAAG,GAAG,IAAI,CAAChB,WAAW,CAACE,OAAO,CAAC;IACnC,IAAIH,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;IACjC,OAAO,IAAI,CAAC8B,WAAW,CAAC3B,OAAO,CAAC,IAAIc,GAAG,CAACA,GAAG,KAAKjB,WAAW,CAACiB,GAAG,GAAG,CAAC;EACvE;AACJ,CAAC;AAED,eAAerB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}